{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/login.service.ts","webpack:///src/app/Services/pet.service.ts","webpack:///src/app/Services/register.service.ts","webpack:///src/app/Services/schedule.service.ts","webpack:///src/app/Services/upload.service.ts","webpack:///src/app/Services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/newpet/newpet.component.ts","webpack:///src/app/components/newpet/newpet.component.html","webpack:///src/app/components/newschedule/newschedule.component.ts","webpack:///src/app/components/newschedule/newschedule.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/schedule/schedule.component.ts","webpack:///src/app/components/schedule/schedule.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LoginService","http","email","password","post","providedIn","PetService","get","headers","Authorization","sessionStorage","getItem","petId","name","age","gender","weight","castrated","disease","photo_link","RegisterService","city","uf","ScheduleService","day","month","year","hour","minute","description","place","UploadService","httpClient","SERVER_URL","formData","reportProgress","observe","TOKEN","UserService","token","localStorage","setItem","routes","path","redirectTo","pathMatch","component","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","forRoot","useHash","declarations","imports","providers","bootstrap","LoginComponent","loginService","userService","router","user","login","subscribe","r","toString","navigateByUrl","alert","error","tryLogin","NewpetComponent","petService","uploadService","selectControl","pet","files","selectedGender","selectedCastrated","createPet","navigate","file","FormData","append","data","inProgress","upload","pipe","event","type","UploadProgress","progress","Math","round","loaded","total","Response","body","link","console","log","fileUpload","nativeElement","value","forEach","uploadFile","onchange","index","length","push","uploadFiles","click","onClick","petRegister","NewscheduleComponent","scheduleService","list","d","Date","date","getFullYear","getMonth","getDate","time","schedule","createCommitment","commitmentRegister","ProfileComponent","modalService","pets","enableSave","IsTextBoxDisabled","reloadPag","modalOptions","backdrop","backdropClass","setTimeout","getPets","userName","reload","skipLocationChange","clear","editPet","deletePet","content","open","result","reason","closeResult","getDismissReason","ESC","BACKDROP_CLICK","logout","RegisterComponent","registerService","register","ScheduleComponent","calendar","schedules","getCommitment","scheduleAux","filter","$event","currentMonth","next","currentYear","dateNavigate","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;AAEX,4BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;8BAEKC,K,EAAeC,Q,EAAgB;AACnC,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAqB,+BAArB,EAAsD;AAC3DF,iBAAK,EAAEA,KADoD;AAE3DC,oBAAQ,EAAEA;AAFiD,WAAtD,CAAP;AAID;;;;;;;uBAXUH,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVK,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,U;AAEX,0BAAoBL,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;kCAEM;AACL,iBAAO,KAAKA,IAAL,CAAUM,GAAV,CAAmB,+BAAnB,EAAoD;AACzDC,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AADgD,WAApD,CAAP;AAKD;;;kCACSC,K,EAAa;AACrB,iBAAO,KAAKX,IAAL,WAAsB,gCAAgCW,KAAtD,EAA8D;AACnEJ,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AAD0D,WAA9D,CAAP;AAKD;;;gCACOC,K,EAAeC,I,EAAcC,G,EAAaC,M,EAAgBC,M,EAAgBC,S,EAAmBC,O,EAAiBC,U,EAAkB;AACtI,iBAAO,KAAKlB,IAAL,CAAUG,IAAV,CAAoB,iCAApB,EAAuD;AAC1DL,cAAE,EAAEa,KADsD;AAE1DC,gBAAI,EAAEA,IAFoD;AAG1DC,eAAG,EAAEA,GAHqD;AAI1DE,kBAAM,EAAEA,MAJkD;AAK1DD,kBAAM,EAAEA,MALkD;AAM1DE,qBAAS,EAAEA,SAN+C;AAO1DC,mBAAO,EAAEA,OAPiD;AAQ1DC,sBAAU,EAAEA;AAR8C,WAAvD,EASL;AACAX,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AADT,WATK,CAAP;AAcD;;;kCAESE,I,EAAcC,G,EAAaE,M,EAAgBD,M,EAAgBE,S,EAAmBC,O,EAAiBC,U,EAAkB;AAEzH,iBAAO,KAAKlB,IAAL,CAAUG,IAAV,CAAoB,4BAApB,EAAiD;AAEpDS,gBAAI,EAAEA,IAF8C;AAGpDC,eAAG,EAAEA,GAH+C;AAIpDE,kBAAM,EAAEA,MAJ4C;AAKpDD,kBAAM,EAAEA,MAL4C;AAMpDE,qBAAS,EAAEA,SANyC;AAOpDC,mBAAO,EAAEA,OAP2C;AAQpDC,sBAAU,EAAEA;AARwC,WAAjD,EASL;AACAX,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AADT,WATK,CAAP;AAcD;;;;;;;uBArDUL,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVD,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACRvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQae,e;AAEX,+BAAoBnB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;iCAEQY,I,EAAcX,K,EAAeC,Q,EAAkBkB,I,EAAcC,E,EAAU;AAC9E,iBAAO,KAAKrB,IAAL,CAAUG,IAAV,CAAqB,4BAArB,EAAmD;AACxDS,gBAAI,EAAEA,IADkD;AAExDX,iBAAK,EAAEA,KAFiD;AAGxDC,oBAAQ,EAAEA,QAH8C;AAIxDkB,gBAAI,EAAEA,IAJkD;AAKxDC,cAAE,EAAEA;AALoD,WAAnD,CAAP;AAOD;;;;;;;uBAdUF,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVf,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakB,e;AAEX,+BAAoBtB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAElB;;;;wCAEY;AACX,iBAAO,KAAKA,IAAL,CAAUM,GAAV,CAAwB,gCAAxB,EAA0D;AAC9DC,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AADqD,WAA1D,CAAP;AAKD;;;yCAEgBa,G,EAAaC,K,EAAeC,I,EAAcC,I,EAAcC,M,EAAgBC,W,EAAqBC,K,EAAa;AACzH,iBAAO,KAAK7B,IAAL,CAAUG,IAAV,CAAyB,gCAAzB,EAA2D;AAC/DoB,eAAG,EAAEA,GAD0D;AAE/DC,iBAAK,EAAEA,KAFwD;AAG/DC,gBAAI,EAAEA,IAHyD;AAI/DC,gBAAI,EAAEA,IAJyD;AAK/DC,kBAAM,EAAEA,MALuD;AAM/DC,uBAAW,EAAEA,WANkD;AAO/DC,iBAAK,EAAEA;AAPwD,WAA3D,EAQJ;AACAtB,mBAAO,EAAE;AACPC,2BAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB;AADR;AADT,WARI,CAAP;AAaD;;;;;;;uBA5BSY,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVlB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa0B,a;AAEZ,6BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AADpB,aAAAC,UAAA,GAAqB,6BAArB;AAGE;;;;+BACMC,Q,EAAU;AAEf,iBAAO,KAAKF,UAAL,CAAgB5B,IAAhB,CAA0B,KAAK6B,UAA/B,EAA2CC,QAA3C,EAAqD;AACxDC,0BAAc,EAAE,IADwC;AAExDC,mBAAO,EAAE;AAF+C,WAArD,CAAP;AAID;;;;;;;uBAXUL,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACV1B,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMgC,KAAK,GAAG,OAAd;;QAKaC,W;AAEX,2BAAoBrC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;iCAEQsC,K,EAAa;AACpBC,sBAAY,CAACC,OAAb,CAAqBJ,KAArB,EAA4BE,KAA5B;AACD;;;mCAEU;AACT,iBAAOC,YAAY,CAAC7B,OAAb,CAAqB0B,KAArB,KAA+B,IAAtC;AACD;;;;;;;uBAZUC,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjC,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,QAAMqC,MAAM,GAAW,CAC5B;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,QAAxB;AAAkCC,eAAS,EAAE;AAA7C,KAD4B,EAE5B;AAAEF,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAF4B,EAG5B;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAH4B,EAI5B;AAAEH,UAAI,EAAE,eAAR;AAAyBG,eAAS,EAAE;AAApC,KAJ4B,EAK5B;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAL4B,EAM5B;AAAEH,UAAI,EAAE,QAAR;AAAkBG,eAAS,EAAE;AAA7B,KAN4B,EAO5B;AAAEH,UAAI,EAAE,uBAAR;AAAiCG,eAAS,EAAE;AAA5C,KAP4B,CAAvB;;;;;;;;;;;;;;;;ACVP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT;AAAEC,eAAO,EAAE,6DAAX;AAA0BC,gBAAQ,EAAE;AAApC,OADS,C;AAEV,gBATQ,CACP,uEADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,CAAE,6DAAaC,OAAb,CAAqB,0DAArB,EAA6B;AAAEC,eAAO,EAAE;AAAX,OAA7B,CAAF,CALO,CASR;;;;0HAGUJ,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,gFAmBkB,EAlBlB,uFAkBkB,EAjBlB,oFAiBkB,EAhBlB,0FAgBkB,EAflB,0FAekB,EAdlB,mGAckB;AAdE,kBAGpB,uEAHoB,EAIpB,0DAJoB,EAKpB,qEALoB,EAMpB,oEANoB,EAMX,4DANW;AAcF,O;AART,K;;;;;sEAQAA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRK,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,uFAHY,EAIZ,oFAJY,EAKZ,0FALY,EAMZ,0FANY,EAOZ,mGAPY,CADN;AAURC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,CAAE,6DAAaH,OAAb,CAAqB,0DAArB,EAA6B;AAAEC,mBAAO,EAAE;AAAX,WAA7B,CAAF,CALO,CAVD;AAiBRG,mBAAS,EAAE,CACT;AAAEN,mBAAO,EAAE,6DAAX;AAA0BC,oBAAQ,EAAE;AAApC,WADS,CAjBH;AAoBRM,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAWaC,c;AAGX,8BAAoBC,YAApB,EAAwDC,WAAxD,EAA0FC,MAA1F,EAA0G;AAAA;;AAAtF,aAAAF,YAAA,GAAAA,YAAA;AAAoC,aAAAC,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAF1F,aAAAC,IAAA,GAAO,EAAP;AAE6G;;;;mCAErG,CAEP;;;mCAEU;AAAA;;AACT,eAAKH,YAAL,CAAkBI,KAAlB,CAAwB,KAAKD,IAAL,CAAUpD,IAAlC,EAAwC,KAAKoD,IAAL,CAAU9D,QAAlD,EACGgE,SADH,CAEI,UAAAC,CAAC,EAAI;AACH,gBAAI,IAAJ,EAAY;AACV1D,4BAAc,CAAC+B,OAAf,CAAuB,QAAvB,EAAiC2B,CAAC,CAACrE,EAAF,CAAKsE,QAAL,EAAjC;AACA3D,4BAAc,CAAC+B,OAAf,CAAuB,UAAvB,EAAmC2B,CAAC,CAACvD,IAArC;AACA,mBAAI,CAACmD,MAAL,CAAYM,aAAZ,CAA2B,UAA3B;AACD;AACF,WARL,EASI,UAAAF,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WAXL;AAYD;;;;;;;uBAtBUX,c,EAAc,4I,EAAA,0I,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,qhB;AAAA;AAAA;ACX3B;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAO;;AAC7B;;AAAI;;AAAK;;AACT;;AAA4B;AAAA;AAAA;;AAA5B;;AACA;;AAA2C;AAAA;AAAA;;AAA3C;;AACA;;AAAsC;AAAA,mBAAS,IAAAY,QAAA,EAAT;AAAmB,WAAnB;;AAA2C;;AAAM;;AAC3F;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;AAb4C;;AAAA,6FAAuB,gBAAvB,EAAuB,qEAAvB;;AACe;;AAAA,iGAA2B,gBAA3B,EAA2B,qEAA3B;;;;;;;;;sEDI9CZ,c,EAAc;cAL1B,uDAK0B;eALhB;AACTZ,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAeauB,e;AAQX,+BAAoBC,UAApB,EAAoDX,MAApD,EAA4EY,aAA5E,EAA0G;AAAA;;AAAtF,aAAAD,UAAA,GAAAA,UAAA;AAAgC,aAAAX,MAAA,GAAAA,MAAA;AAAwB,aAAAY,aAAA,GAAAA,aAAA;AAP5E,aAAAC,aAAA,GAA4B,IAAI,0DAAJ,EAA5B;AACA,aAAAC,GAAA,GAAM,EAAN;AAKiE,aAAAC,KAAA,GAAS,EAAT;AAC4C;;;;mCAErG,CACP;;;oCAEWD,G,EAAQ;AAAA;;AAElB,cAAG,KAAKE,cAAL,IAAuB,OAA1B,EAAkC;AAChCF,eAAG,CAAC/D,MAAJ,GAAa,CAAb;AACD,WAFD,MAGI;AACF+D,eAAG,CAAC/D,MAAJ,GAAa,CAAb;AACD;;AAGD,cAAG,KAAKkE,iBAAL,IAA0B,KAA7B,EAAmC;AACjCH,eAAG,CAAC7D,SAAJ,GAAgB,CAAhB;AACD,WAFD,MAGI;AACF6D,eAAG,CAAC7D,SAAJ,GAAgB,CAAhB;AACD;;AAED,eAAK0D,UAAL,CAAgBO,SAAhB,CACEJ,GAAG,CAACjE,IADN,EACYiE,GAAG,CAAChE,GADhB,EACqBgE,GAAG,CAAC9D,MADzB,EAEE8D,GAAG,CAAC/D,MAFN,EAEc+D,GAAG,CAAC7D,SAFlB,EAE6B6D,GAAG,CAAC5D,OAFjC,EAE0C4D,GAAG,CAAC3D,UAF9C,EAE0DgD,SAF1D,CAGI,UAAAC,CAAC,EAAI;AACHG,iBAAK,+BAAL;;AACA,kBAAI,CAACP,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WANL,EAOI,UAAAf,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WATL;AAWD;;;mCAEUY,I,EAAM;AAAA;;AACf,cAAMlD,QAAQ,GAAG,IAAImD,QAAJ,EAAjB;AACAnD,kBAAQ,CAACoD,MAAT,CAAgB,MAAhB,EAAwBF,IAAI,CAACG,IAA7B;AACAH,cAAI,CAACI,UAAL,GAAkB,IAAlB;AACA,eAAKZ,aAAL,CAAmBa,MAAnB,CAA0BvD,QAA1B,EAAoCwD,IAApC,CACE,2DAAI,UAAAC,KAAK,EAAI;AACX,oBAAQA,KAAK,CAACC,IAAd;AACE,mBAAK,mEAAcC,cAAnB;AACET,oBAAI,CAACU,QAAL,GAAgBC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,MAAN,GAAe,GAAf,GAAqBN,KAAK,CAACO,KAAtC,CAAhB;AACA;;AACF,mBAAK,mEAAcC,QAAnB;AACE,sBAAI,CAACrB,GAAL,CAAS3D,UAAT,GAAsBwE,KAAK,CAACS,IAAN,CAAWC,IAAjC;AACA,uBAAOV,KAAP;AANJ;AAQD,WATD,CADF,EAWE,kEAAW,UAACnB,KAAD,EAA8B;AACvCY,gBAAI,CAACI,UAAL,GAAkB,KAAlB;AACA,mBAAO,iFAAMJ,IAAI,CAACG,IAAL,CAAU1E,IAAhB,qBAAP;AACD,WAHD,CAXF,EAcMsD,SAdN,CAcgB,UAACwB,KAAD,EAAgB;AAC5B,gBAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC/BW,qBAAO,CAACC,GAAR,CAAYZ,KAAK,CAACS,IAAlB;AACD;AACF,WAlBH;AAmBD;;;sCAEa;AAAA;;AACZ,eAAKI,UAAL,CAAgBC,aAAhB,CAA8BC,KAA9B,GAAsC,EAAtC;AACA,eAAK3B,KAAL,CAAW4B,OAAX,CAAmB,UAAAvB,IAAI,EAAI;AAC3B,kBAAI,CAACwB,UAAL,CAAgBxB,IAAhB;AACC,WAFD;AAGD;;;kCAGS;AAAA;;AACR,cAAMoB,UAAU,GAAG,KAAKA,UAAL,CAAgBC,aAAnC;;AAAiDD,oBAAU,CAACK,QAAX,GAAsB,YAAM;AAC7E,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,UAAU,CAACzB,KAAX,CAAiBgC,MAA7C,EAAqDD,KAAK,EAA1D,EACA;AACC,kBAAM1B,IAAI,GAAGoB,UAAU,CAACzB,KAAX,CAAiB+B,KAAjB,CAAb;;AACA,oBAAI,CAAC/B,KAAL,CAAWiC,IAAX,CAAgB;AAAEzB,oBAAI,EAAEH,IAAR;AAAcI,0BAAU,EAAE,KAA1B;AAAiCM,wBAAQ,EAAE;AAA3C,eAAhB;AACA;;AACC,kBAAI,CAACmB,WAAL;AACD,WAPgD;;AAQjDT,oBAAU,CAACU,KAAX;AACD;;;uCAEW,CAEX;;;;;;;uBA1FUxC,e,EAAe,wI,EAAA,uH,EAAA,8I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;ACf5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAqB;AAAA,mBAAS,IAAAyC,OAAA,EAAT;AAAkB,WAAlB;;AACjB;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACA;;AACJ;;AACA;;AAAG;;AAAuC;;AAC1C;;AACI;;AACA;;AACJ;;AACJ;;AAEA;;AACI;;AAEI;AAAA;AAAA;;AAFJ;;AAIA;;AAEI;AAAA;AAAA;;AAFJ;;AAIA;;AAEI;AAAA;AAAA;;AAFJ;;AAIA;;AACI;;AACI;;AAAG;;AAAQ;;AACX;;AAA2C;AAAA;AAAA;;AACvC;;AAAkB;;AAAe;;AACjC;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACjB;;AACJ;;AACA;;AACI;;AAAG;;AAAY;;AACf;;AAA6C;AAAA;AAAA;;AACzC;;AAAQ;;AAAS;;AACjB;;AAAQ;;AAAG;;AACX;;AAAQ;;AAAG;;AACf;;AACJ;;AACJ;;AAEA;;AAEI;AAAA;AAAA;;AAFJ;;AAGA;;AAAsC;AAAA,mBAAS,IAAAC,WAAA,KAAAtC,GAAA,CAAT;AAAyB,WAAzB;;AAClC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA5DyB;;AAAA;;AAsBL;;AAAA,4FAAsB,gBAAtB,EAAsB,sEAAtB;;AAIA;;AAAA,2FAAqB,gBAArB,EAAqB,sEAArB;;AAIA;;AAAA,8FAAwB,gBAAxB,EAAwB,sEAAxB;;AAK+C;;AAAA,kGAA4B,gBAA5B,EAA4B,sEAA5B;;AAQE;;AAAA,qGAA+B,gBAA/B,EAA+B,sEAA/B;;AAUjD;;AAAA,+FAAyB,gBAAzB,EAAyB,sEAAzB;;;;;;;;;sED3CPJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACTzB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;gBAOzB,uD;iBAAU,Y,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEtB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAWakE,oB;AAOX,oCACUrD,MADV,EACkCsD,eADlC,EACoE;AAAA;;AAA1D,aAAAtD,MAAA,GAAAA,MAAA;AAAwB,aAAAsD,eAAA,GAAAA,eAAA;AAPlC,aAAAC,IAAA,GAAwB,EAAxB;AACA,aAAAC,CAAA,GAAI,IAAIC,IAAJ,EAAJ;AACA,aAAAC,IAAA,GAAsB;AAAEhG,cAAI,EAAE,KAAK8F,CAAL,CAAOG,WAAP,EAAR;AAA8BlG,eAAK,EAAE,KAAK+F,CAAL,CAAOI,QAAP,KAAoB,CAAzD;AAA4DpG,aAAG,EAAE,KAAKgG,CAAL,CAAOK,OAAP;AAAjE,SAAtB;AACA,aAAAC,IAAA,GAAO;AAAEnG,cAAI,EAAE,EAAR;AAAYC,gBAAM,EAAE;AAApB,SAAP;AACA,aAAAmG,QAAA,GAAW,EAAX;AAKC;;;;mCAEO,CACP,C,CAED;AAEA;AACA;;;;2CAEmBA,Q,EAAkB;AAAA;;AACnCA,kBAAQ,CAACvG,GAAT,GAAe,KAAKkG,IAAL,CAAUlG,GAAzB;AACAuG,kBAAQ,CAACtG,KAAT,GAAiB,KAAKiG,IAAL,CAAUjG,KAA3B;AACAsG,kBAAQ,CAACrG,IAAT,GAAgB,KAAKgG,IAAL,CAAUhG,IAA1B;AACAqG,kBAAQ,CAACpG,IAAT,GAAgB,KAAKmG,IAAL,CAAUnG,IAA1B;AACAoG,kBAAQ,CAACnG,MAAT,GAAkB,KAAKkG,IAAL,CAAUlG,MAA5B;AAEA,eAAK0F,eAAL,CAAqBU,gBAArB,CACED,QAAQ,CAACvG,GADX,EACgBuG,QAAQ,CAACtG,KADzB,EACgCsG,QAAQ,CAACrG,IADzC,EAEEqG,QAAQ,CAACpG,IAFX,EAEiBoG,QAAQ,CAACnG,MAF1B,EAGEmG,QAAQ,CAAClG,WAHX,EAGwBkG,QAAQ,CAACjG,KAHjC,EAGwCqC,SAHxC,CAII,UAAAC,CAAC,EAAI;AACH;;AACA,kBAAI,CAACJ,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD,WAPL,EAQI,UAAAf,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WAVL;AAYD;;;;;;;uBAvCU6C,oB,EAAoB,uH,EAAA,kJ;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,c;AAAA,opB;AAAA;AAAA;ACXjC;;AACI;;AACI;;AACI;;AACI;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AAAgB;AAAA;AAAA;;AAAmB;;AAGvC;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AAEA;;AACI;;AAEI;AAAA;AAAA;;AAFJ;;AAKI;;AAAgB;AAAA;AAAA;;AAAyD;;AAE7E;;AACO;AAAA;AAAA;;AADP;;AAGA;;AAAqC;AAAA,mBAAS,IAAAY,kBAAA,cAAT;AAAqC,WAArC;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA3BoC;;AAAA;;AAahB;;AAAA,wGAAkC,gBAAlC,EAAkC,qEAAlC;;AAGgB;;AAAA,wFAAkB,gBAAlB,EAAkB,qEAAlB;;AAGb;;AAAA,kGAA4B,gBAA5B,EAA4B,qEAA5B;;;;;;;;;sEDlBVZ,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpE,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyBY;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAQ;;AAAM;;AACd;;AAAG;;AAAc;;AACrB;;AACA;;AACI;;AAAQ;;AAAO;;AACf;;AAAG;;AAAa;;AACpB;;AACJ;;AACJ;;;;;;AAPe;;AAAA;;AAIA;;AAAA;;;;;;;;AA+CnB;;AAAwG;AAAA;;AAAA;;AAAA,iBAAS,iBAAc,aAAd,CAAT;AAAqC,SAArC;;AAAuC;;AAAM;;;;;;;;AACrJ;;AAA8E;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iBAAiB,iBAAc,aAAd,CAAjB;AAA6C,SAA7C;;AAA+C;;AAAM;;;;;;;;AAvCvI;;AACI;;AACA;;AAAuD;AAAA;AAAA,iBAAS,iBAAc,aAAd,CAAT;AAAqC,SAArC;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAQ;;AAAM;;AACd;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACJ;;AACA;;AACI;;AAAQ;;AAAO;;AACf;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACJ;;AACA;;AACI;;AAAQ;;AAAQ;;AAChB;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAAtC;;AACJ;;AACA;;AACI;;AAAQ;;AAAU;;AAClB;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAzC;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iBAAmB,eAAY,YAAZ,CAAnB;AAA4C,SAA5C;;AAC1D;;AACJ;;AACA;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAC/C;;AACJ;;AACA;;AACA;;AACJ;;;;;;AA1BmB;;AAAA;;AAA6B;;AAAgC;;AAI7D;;AAAA;;AAA6B;;AAA+B;;AAI5D;;AAAA;;AAA+B;;AAAkC;;AAIjE;;AAAA;;AAAkC;;AAAqC;;AAY9E;;AAAA;;AACA;;AAAA;;;;QDxEH+E,gB;AAcX,gCACUC,YADV,EAEUxD,UAFV,EAGUX,MAHV,EAGwB;AAAA;;AAFd,aAAAmE,YAAA,GAAAA,YAAA;AACA,aAAAxD,UAAA,GAAAA,UAAA;AACA,aAAAX,MAAA,GAAAA,MAAA;AAhBV,aAAAoE,IAAA,GAAO,EAAP;AAKA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,iBAAA,GAAoB,IAApB;AACA,aAAAtF,KAAA,GAAQ,yBAAR;AAGA,aAAAuF,SAAA,GAAY,IAAZ;AAQE,aAAKC,YAAL,GAAoB;AAClBC,kBAAQ,EAAC,QADS;AAElBC,uBAAa,EAAC;AAFI,SAApB;AAID;;;;mCAEO;AAAA;;AACNC,oBAAU,CAAC,YAAM;AACf,kBAAI,CAAChE,UAAL,CAAgBiE,OAAhB,GAA0BzE,SAA1B,CACE,UAAAC,CAAC,EAAI;AACH,oBAAI,CAACgE,IAAL,GAAYhE,CAAZ;;AAEA,mBAAI,IAAIU,GAAR,IAAe,MAAI,CAACsD,IAApB,EAAyB;AACvB,oBAAG,MAAI,CAACtD,GAAL,CAAS/D,MAAT,IAAmB,CAAtB,EACC,MAAI,CAACA,MAAL,GAAc,OAAd,CADD,KAEI;AACF,wBAAI,CAACA,MAAL,GAAc,OAAd;AACD;AAED,oBAAG,MAAI,CAAC+D,GAAL,CAAS7D,SAAT,IAAsB,CAAzB,EACE,MAAI,CAAC6D,GAAL,CAAS7D,SAAT,GAAqB,KAArB,CADF,KAEI;AACF,wBAAI,CAAC6D,GAAL,CAAS7D,SAAT,GAAqB,KAArB;AACD;AACF;AAEF,aAlBH,EAmBE,UAAAmD,CAAC,EAAI;AACHG,mBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,aArBH;;AAuBA,kBAAI,CAACqE,QAAL,GAAgBnI,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACD,WAzBS,EAyBP,GAzBO,CAAV;AA0BD;;;iCAEQ;AAAA;;AACP,cAAI,KAAKmI,MAAT,EAAiB;AACf,iBAAK9E,MAAL,CAAYM,aAAZ,CAA0B,UAA1B,EAAsC;AAAEyE,gCAAkB,EAAE;AAAtB,aAAtC,EAAoEvJ,IAApE,CAAyE,YAAM;AAC7E,oBAAI,CAACwE,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,oBAAI,CAACoD,SAAL,GAAiB,KAAjB;AACD,aAHD;AAID;AACF;;;iCAEK;AACJ7H,wBAAc,CAACsI,KAAf;AACA,eAAKhF,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AAED;;;sCACU;AACT,eAAKmD,iBAAL,GAAyB,KAAzB;AACA,eAAKD,UAAL,GAAkB,IAAlB;AACD;;;+BAEG;AACF,eAAK1D,UAAL,CAAgBsE,OAAhB,CAAwB,KAAKnE,GAAL,CAAS/E,EAAjC,EAAqC,KAAK+E,GAAL,CAASjE,IAA9C,EAAoD,KAAKiE,GAAL,CAAShE,GAA7D,EACwB,KAAKgE,GAAL,CAAS/D,MADjC,EACyC,KAAK+D,GAAL,CAAS9D,MADlD,EAC0D,KAAK8D,GAAL,CAAS7D,SADnE,EAEwB,KAAK6D,GAAL,CAAS5D,OAFjC,EAE0C,KAAK4D,GAAL,CAAS3D,UAFnD,EAE+DgD,SAF/D,CAGE,UAAAC,CAAC,EAAI,CACH;AACD,WALH,EAME,UAAAA,CAAC,EAAG;AACFG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WARH;AAWD;;;kCAEK;AACJ,eAAKG,UAAL,CAAgBuE,SAAhB,CAA0B,KAAKpE,GAAL,CAAS/E,EAAnC,EAAuCoE,SAAvC,CACE,UAAAC,CAAC,EAAG,CAEH,CAHH,EAIE,UAAAA,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WANH;AAQA,eAAKsE,MAAL;AACA,eAAK9E,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;6BAEIgE,O,EAASrE,G,EAAK;AAAA;;AACjB,eAAKA,GAAL,GAAWA,GAAX;AACA,eAAKqD,YAAL,CAAkBiB,IAAlB,CAAuBD,OAAvB,EAAgC,KAAKX,YAArC,EAAmDa,MAAnD,CAA0D7J,IAA1D,CAA+D,UAAC6J,MAAD,EAAY,CAE1E,CAFD,EAEG,UAACC,MAAD,EAAY;AACb,kBAAI,CAACC,WAAL,uBAAgC,MAAI,CAACC,gBAAL,CAAsBF,MAAtB,CAAhC;AACD,WAJD;AAKD;;;yCAGwBA,M,EAAW;AAClC,eAAKhB,iBAAL,GAAyB,IAAzB;AACA,eAAKD,UAAL,GAAkB,KAAlB;;AACA,cAAIiB,MAAM,KAAK,+EAAoBG,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAIH,MAAM,KAAK,+EAAoBI,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAiBJ,MAAjB;AACD;AACF;;;;;;;uBAxHUpB,gB,EAAgB,oI,EAAA,wI,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,khD;AAAA;AAAA;ACZ7B;;AACI;;AAEI;;AACI;;AACI;;AACA;;AAAM;;AAA0B;;AAChC;;AAA6C;AAAA,mBAAS,IAAAyB,MAAA,EAAT;AAAiB,WAAjB;;AACzC;;AACJ;;AACJ;;AAEA;;AACI;;AAA6D;;AAAa;;AAC1E;;AAAsD;;AAAM;;AAC5D;;AAA8C;AAAA,mBAAS,IAAAA,MAAA,EAAT;AAAiB,WAAjB;;AAC1C;;AACJ;;AACJ;;AAEJ;;AAEA;;AAAmB;;AAAiB;;AAA0B;;AAE9D;;AACI;;AAeJ;;AACJ;;AACJ;;AAEA;;;;AAtCsB;;AAAA;;AAmByD;;AAAA,wFAAyC,SAAzC,EAAyC,SAAzC;;;;;;;;;sEDblEzB,gB,EAAgB;cAN5B,uDAM4B;eANlB;AACTjF,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAMkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAWayG,iB;AAGX,iCAAoBC,eAApB,EAA8D9F,WAA9D,EAAgGC,MAAhG,EAAgH;AAAA;;AAA5F,aAAA6F,eAAA,GAAAA,eAAA;AAA0C,aAAA9F,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAFhG,aAAAC,IAAA,GAAO,EAAP;AAEmH;;;;mCAE3G,CAEP;;;iCAGQA,I,EAAU;AAAA;;AACjB,eAAKA,IAAL,CAAUpD,IAAV,GAAiBoD,IAAI,CAACpD,IAAtB;AACA,eAAKoD,IAAL,CAAU/D,KAAV,GAAkB+D,IAAI,CAAC/D,KAAvB;AACA,eAAK+D,IAAL,CAAU9D,QAAV,GAAqB8D,IAAI,CAAC9D,QAA1B;AACA,eAAK8D,IAAL,CAAU5C,IAAV,GAAiB4C,IAAI,CAAC5C,IAAtB;AACA,eAAK4C,IAAL,CAAU3C,EAAV,GAAe2C,IAAI,CAAC3C,EAApB;AAEA,eAAKuI,eAAL,CAAqBC,QAArB,CAA8B,KAAK7F,IAAL,CAAUpD,IAAxC,EAA8C,KAAKoD,IAAL,CAAU/D,KAAxD,EAA+D,KAAK+D,IAAL,CAAU9D,QAAzE,EAAmF,KAAK8D,IAAL,CAAU5C,IAA7F,EAAmG,KAAK4C,IAAL,CAAU3C,EAA7G,EACC6C,SADD,CAEE,UAAAC,CAAC,EAAI;AACHG,iBAAK,sBAAeH,CAAC,CAACvD,IAAjB,OAAL;;AACA,mBAAI,CAACmD,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WALH,EAME,UAAAf,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WARH;AAUD;;;;;;;uBA3BUoF,iB,EAAiB,kJ,EAAA,0I,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,c;AAAA,gxB;AAAA;AAAA;ACX9B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAG;;AAA+E;;AAClF;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAA0B;AAAA;AAAA;;AAA1B;;AAEA;;AAAyC;AAAA;AAAA;;AAAzC;;AAEA;;AAA2C;AAAA;AAAA;;AAA3C;;AAEA;;AACI;;AAAiE;AAAA;AAAA;;AAAjE;;AACA;;AAA4D;AAAA;AAAA;;AAA5D;;AACJ;;AAEA;;AAAqC;AAAA,mBAAS,IAAAE,QAAA,UAAT;AAAuB,WAAvB;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAjB0C;;AAAA,6FAAuB,gBAAvB,EAAuB,sEAAvB;;AAEe;;AAAA,8FAAwB,gBAAxB,EAAwB,sEAAxB;;AAEE;;AAAA,iGAA2B,gBAA3B,EAA2B,sEAA3B;;AAG0B;;AAAA,6FAAuB,gBAAvB,EAAuB,sEAAvB;;AACL;;AAAA,2FAAqB,gBAArB,EAAqB,sEAArB;;;;;;;;;sEDXnEF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3G,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC+BgB;;AAA0G;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtG;;AACI;;AACI;;AAAQ;;AAAmC;;AAAM;;AACjD;;AACJ;;AACA;;AACI;;AAAQ;;AAAqC;;AAAO;;AACpD;;AACJ;;AACA;;AACI;;AAAQ;;AAA4B;;AAAS;;AAC7C;;AACA;;AACJ;;AACA;;AACI;;AAAQ;;AAAgC;;AAAW;;AACnD;;AACJ;;AACJ;;AACJ;;;;;;AAhBY;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;;;QDrCf4G,iB;AAYX,iCACU/F,MADV,EAEUsD,eAFV,EAGU0C,QAHV,EAG+B;AAAA;;AAFrB,aAAAhG,MAAA,GAAAA,MAAA;AACA,aAAAsD,eAAA,GAAAA,eAAA;AACA,aAAA0C,QAAA,GAAAA,QAAA;AAbV,aAAAC,SAAA,GAAY,EAAZ;AAKA,aAAAzC,CAAA,GAAI,IAAIC,IAAJ,EAAJ;AACA,aAAAF,IAAA,GAAwB,EAAxB;AACA,aAAAG,IAAA,GAAsB;AAAEhG,cAAI,EAAE,KAAK8F,CAAL,CAAOG,WAAP,EAAR;AAA8BlG,eAAK,EAAE,KAAK+F,CAAL,CAAOI,QAAP,KAAoB,CAAzD;AAA4DpG,aAAG,EAAE,KAAKgG,CAAL,CAAOK,OAAP;AAAjE,SAAtB;AASC;;;;mCAKO;AAAA;;AACJ,eAAKP,eAAL,CAAqB4C,aAArB,GAAqC/F,SAArC,CACE,UAAAC,CAAC,EAAI;AACH,mBAAI,CAAC6F,SAAL,GAAiB7F,CAAjB;AACA,mBAAI,CAAC+F,WAAL,GAAmB,OAAI,CAACF,SAAL,CAAeG,MAAf,CAAsB,UAACrC,QAAD,EAAc;AACrD,qBAAOA,QAAQ,CAACtG,KAAT,IAAkB,OAAI,CAAC+F,CAAL,CAAOI,QAAP,KAAoB,CAA7C;AACD,aAFkB,CAAnB;AAGD,WANH,EAOE,UAAAxD,CAAC,EAAI;AACHG,iBAAK,CAACH,CAAC,CAACI,KAAF,CAAQA,KAAT,CAAL;AACD,WATH;AAUE,eAAKqE,QAAL,GAAgBnI,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACL;;;iCAEK;AACJD,wBAAc,CAACsI,KAAf;AACA,eAAKhF,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;gCAEOuC,I,EAAmB;AAC1B,eAAKA,IAAL,GAAYA,IAAZ;AACA;;;qCAEY2C,M,EAAoC;AAAA;;AAC/C,eAAKC,YAAL,GAAoBD,MAAM,CAACE,IAAP,CAAY9I,KAAhC;AACA,eAAK+I,WAAL,GAAmBH,MAAM,CAACE,IAAP,CAAY7I,IAA/B;AAEA,eAAKyI,WAAL,GAAmB,KAAKF,SAAL,CAAeG,MAAf,CAAsB,UAACrC,QAAD,EAAc;AACrD,mBAAOA,QAAQ,CAACtG,KAAT,IAAkB,OAAI,CAAC6I,YAAvB,IAAuCvC,QAAQ,CAACrG,IAAT,IAAiB,OAAI,CAAC8I,WAApE;AACD,WAFkB,CAAnB;AAID;;;+BAEMhJ,G,EAAG;AACR,eAAKkG,IAAL,CAAUlG,GAAV,GAAgBA,GAAhB;AACD;;;;;;;uBA1DUuI,iB,EAAiB,uH,EAAA,kJ,EAAA,uI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,s/B;AAAA;AAAA;ACX9B;;AACI;;AAEI;;AACI;;AACI;;AACA;;AAAM;;AAA0B;;AAChC;;AAA8C;AAAA,mBAAS,IAAAJ,MAAA,EAAT;AAAiB,WAAjB;;AAC1C;;AACJ;;AACJ;;AAEA;;AACI;;AAAuD;;AAAoC;;AAAM;;AACjG;;AAAqE;;AAAI;;AAEzE;;AAA8C;AAAA,mBAAS,IAAAA,MAAA,EAAT;AAAiB,WAAjB;;AAC1C;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AAAqB;AAAA;AAAA,aAAkB,UAAlB,EAAkB;AAAA,mBAAa,IAAAc,YAAA,QAAb;AAAiC,WAAnD;;AAAsD;;AAK/E;;AACA;;AACI;;AACI;;AAqBJ;;AACJ;;AAEJ;;AACJ;;;;AAlDsB;;AAAA;;AAiBW;;AAAA;;AAQmC;;AAAA,+FAAqD,SAArD,EAAqD,SAArD;;;;;;;;;sEDpBvDV,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9G,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuH,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIvE,OAAO,CAAC9B,KAAR,CAAcqG,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from 'src/app/Models/user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  login(email: string, password: string): Observable<User>{\r\n    return this.http.post<User>('http://localhost:3333/session', {\r\n      email: email,\r\n      password: password\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Pet } from '../Models/pet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PetService {\n\n  constructor(private http: HttpClient) { \n\n  }\n\n  getPets(): Observable<Pet>{\n    return this.http.get<Pet>('http://localhost:3333/profile', {\n      headers: {\n        Authorization: sessionStorage.getItem('userId'),\n      }\n    });\n  }\n  deletePet(petId: number): Observable<Pet>{\n    return this.http.delete<Pet>('http://localhost:3333/pets/' + petId , {\n      headers: {\n        Authorization: sessionStorage.getItem('userId'),\n      }\n    });\n  }\n  editPet(petId: number, name: string, age: number, gender: number, weight: string, castrated: number, disease: string, photo_link: string): Observable<Pet>{\n    return this.http.post<Pet>('http://localhost:3333/pets/edit', {\n        id: petId,\n        name: name,\n        age: age,\n        weight: weight,\n        gender: gender,\n        castrated: castrated,\n        disease: disease,\n        photo_link: photo_link,\n    },{\n      headers: {\n        Authorization: sessionStorage.getItem('userId')\n      },\n    });\n  }\n  \n  createPet(name: string, age: number, weight: string, gender: number, castrated: number, disease: string, photo_link: string): Observable<Pet>{\n    \n    return this.http.post<Pet>('http://localhost:3333/pets',{\n\n        name: name,\n        age: age,\n        weight: weight,\n        gender: gender,\n        castrated: castrated,\n        disease: disease,\n        photo_link: photo_link,\n    },{\n      headers: {\n        Authorization: sessionStorage.getItem('userId')\n      },\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../Models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { \n\n  }\n\n  register(name: string, email: string, password: string, city: string, uf: string): Observable<User>{\n    return this.http.post<User>('http://localhost:3333/user', {\n      name: name,\n      email: email,\n      password: password,\n      city: city,\n      uf: uf\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Schedule } from '../Models/schedule';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduleService {\n\n  constructor(private http: HttpClient) {\n\n   }\n\n   getCommitment(): Observable<Schedule>{\n     return this.http.get<Schedule>('http://localhost:3333/schedule', {\n        headers: {\n          Authorization: sessionStorage.getItem('userId'),\n        }\n     });\n   }\n\n   createCommitment(day: number, month: number, year: number, hour: number, minute: number, description: string, place: string): Observable<Schedule>{\n     return this.http.post<Schedule>('http://localhost:3333/schedule', {\n        day: day,\n        month: month,\n        year: year,\n        hour: hour,\n        minute: minute,\n        description: description,\n        place: place,\n     }, {\n        headers: {\n          Authorization: sessionStorage.getItem('userId')\n        },\n      });\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';  \nimport { map } from  'rxjs/operators';\n\n\n@Injectable({  \n  providedIn: 'root'  \n})  \nexport class UploadService { \n\tSERVER_URL: string = \"https://file.io/?expires=2m\";  \n\tconstructor(private httpClient: HttpClient) {\n\n  }\n  upload(formData) {\n\n    return this.httpClient.post<any>(this.SERVER_URL, formData ,{  \n        reportProgress: true,  \n        observe: 'events'\n      });  \n  }\n}\n\n\n","import {Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../Models/user';\r\n\r\nconst TOKEN = 'TOKEN';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem(TOKEN, token);\r\n  }\r\n\r\n  isLogged() {\r\n    return localStorage.getItem(TOKEN) != null;\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { NeedAuthGuard } from './NeedAuth';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { NewpetComponent } from './components/newpet/newpet.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ScheduleComponent } from './components/schedule/schedule.component';\nimport { NewscheduleComponent } from './components/newschedule/newschedule.component';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'cadastrar-pet', component: NewpetComponent },\n  { path: 'cadastro', component: RegisterComponent},\n  { path: 'agenda', component: ScheduleComponent},\n  { path: 'cadastrar-compromisso', component: NewscheduleComponent},\n];\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'PetNote';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router'; \r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { routes } from './app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { NewpetComponent } from './components/newpet/newpet.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ScheduleComponent } from './components/schedule/schedule.component';\r\nimport { NewscheduleComponent } from './components/newschedule/newschedule.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    NewpetComponent,\r\n    RegisterComponent,\r\n    ScheduleComponent,\r\n    NewscheduleComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    [ RouterModule.forRoot(routes, { useHash: false} )] \r\n  ],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/Models/user';\nimport { UserService } from 'src/app/Services/user.service';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/Services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  user = {} as User;\n\n  constructor(private loginService: LoginService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  tryLogin() {\n    this.loginService.login(this.user.name, this.user.password)\n      .subscribe(\n        r => {\n          if (1 == 1) {\n            sessionStorage.setItem('userId', r.id.toString());\n            sessionStorage.setItem('userName', r.name);\n            this.router.navigateByUrl[('/profile')];\n          }\n        },\n        r => {\n          alert(r.error.error);\n        });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"login-container row\">\n        <section class=\"form col-md-6 col-lg-6\">\n            <form>\n                <h1 class=\"indieFont\">PetNote</h1>\n                <h2>Login</h2>\n                <input placeholder=\"E-mail\" [(ngModel)]=\"user.name\"  [ngModelOptions]=\"{standalone: true}\"/>\n                <input type=\"password\" placeholder=\"Senha\" [(ngModel)]=\"user.password\"  [ngModelOptions]=\"{standalone: true}\"/>\n                <button class=\"button\" type=\"submit\"  (click)=\"tryLogin()\" routerLink=\"/profile\">Entrar</button>\n            </form>\n            <a class=\"back-link\" routerLink=\"/cadastro\">\n                <i class=\"fas fa-sign-in-alt\"></i> \n                Criar conta\n            </a>\n        </section>\n        <div class=\"img-container col-md-6 col-lg-6\" >\n            <img src=\"../../../assets/logo.png\" alt=\"pets\"/>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { PetService } from 'src/app/Services/pet.service';\nimport { Pet } from 'src/app/Models/pet';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { UploadService } from 'src/app/Services/upload.service';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs/internal/observable/of';\n\n@Component({\n  selector: 'app-newpet',\n  templateUrl: './newpet.component.html',\n  styleUrls: ['./newpet.component.scss']\n})\nexport class NewpetComponent implements OnInit {\n  selectControl:FormControl = new FormControl();\n  pet = {} as Pet;\n\n  selectedGender;\n  selectedCastrated;\n  \n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;files  = [];  \n  constructor(private petService: PetService, private router: Router, private uploadService: UploadService) { }\n\n  ngOnInit(): void {\n  }\n\n  petRegister(pet: Pet){\n\n    if(this.selectedGender == \"Fêmea\"){\n      pet.gender = 0;\n    }\n    else{\n      pet.gender = 1;\n    }\n\n\n    if(this.selectedCastrated == \"Não\"){\n      pet.castrated = 0;\n    }\n    else{\n      pet.castrated = 1;\n    }\n\n    this.petService.createPet(\n      pet.name, pet.age, pet.weight, \n      pet.gender, pet.castrated, pet.disease, pet.photo_link).subscribe(\n        r => {\n          alert(`Pet cadastrado com sucesso!`);\n          this.router.navigate(['/profile']);\n        },\n        r => {\n          alert(r.error.error);\n        }\n      )\n  }\n\n  uploadFile(file) {  \n    const formData = new FormData();  \n    formData.append('file', file.data);  \n    file.inProgress = true;  \n    this.uploadService.upload(formData).pipe(  \n      map(event => {  \n        switch (event.type) {  \n          case HttpEventType.UploadProgress:  \n            file.progress = Math.round(event.loaded * 100 / event.total);  \n            break;  \n          case HttpEventType.Response:  \n            this.pet.photo_link = event.body.link;\n            return event;  \n        }  \n      }),  \n      catchError((error: HttpErrorResponse) => {  \n        file.inProgress = false;  \n        return of(`${file.data.name} upload failed.`);  \n      })).subscribe((event: any) => {  \n        if (typeof (event) === 'object') {  \n          console.log(event.body);  \n        }  \n      });  \n  }\n\n  uploadFiles() {  \n    this.fileUpload.nativeElement.value = '';  \n    this.files.forEach(file => {  \n    this.uploadFile(file);  \n    });  \n  }\n\n\n  onClick() {  \n    const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {  \n    for (let index = 0; index < fileUpload.files.length; index++)  \n    {  \n     const file = fileUpload.files[index];  \n     this.files.push({ data: file, inProgress: false, progress: 0});  \n    }  \n      this.uploadFiles();  \n    };  \n    fileUpload.click();\n  }\n\n  buscarimagem(){\n\n  }\n}\n\n\n","<div class=\"container\">\n    <div class=\"new-pet-container row\">\n        <div class=\"content\">\n            <section class=\"col-lg-6\">\n                <div class=\"pet-photo\">\n                    <img src=\"{{ pet.photo_link }}\"/>\n                </div>\n                <div class=\"button-photo\">\n                    <button color=\"warn\" (click)=\"onClick()\">  \n                        <i class=\"fas fa-camera\"></i>\n                    </button>  \n                </div>\n                <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                <h1>\n                    Cadastrar novo pet \n                    <i class=\"fas fa-paw\"></i>\n                </h1>\n                <p>Preencha com as informações do seu pet.</p>\n                <a class=\"back-link\" routerLink=\"/profile\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    Voltar para home\n                </a>\n            </section> \n\n            <form class=\"col-lg-6\">\n                <input \n                    placeholder=\"Nome\"\n                    [(ngModel)]=\"pet.name\" [ngModelOptions]=\"{standalone: true}\" />\n                \n                <input type=\"number\" \n                    placeholder=\"Idade\" \n                    [(ngModel)]=\"pet.age\" [ngModelOptions]=\"{standalone: true}\"/>\n                \n                <input type=\"number\" \n                    placeholder=\"Peso\"\n                    [(ngModel)]=\"pet.weight\" [ngModelOptions]=\"{standalone: true}\"/>\n                \n                <div class=\"input-group\">\n                    <div class=\"col-6\">\n                        <p>Gênero: </p>\n                        <select name=\"Gênero\" class=\"form-control\" [(ngModel)]=\"selectedGender\" [ngModelOptions]=\"{standalone: true}\"> \n                            <option  selected>Selecionedasdas</option>\n                            <option>Fêmea</option>\n                            <option>Macho</option>\n                        </select>\n                    </div>\n                    <div class=\"col-6\">\n                        <p>Cadastrado: </p>\n                        <select name=\"Castrado\" class=\"form-control\" [(ngModel)]=\"selectedCastrated\" [ngModelOptions]=\"{standalone: true}\">\n                            <option>Selecione</option>\n                            <option>Sim</option>\n                            <option>Não</option>\n                        </select>\n                    </div>\n                </div>\n                \n                <input \n                    placeholder=\"Doenças\" \n                    [(ngModel)]=\"pet.disease\" [ngModelOptions]=\"{standalone: true}\"/>\n                <button class=\"button\" type=\"submit\"  (click)=\"petRegister(pet)\">\n                    Cadastrar\n                </button>\n            </form>  \n        </div> \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Schedule } from 'src/app/Models/schedule';\r\nimport { ScheduleService } from 'src/app/Services/schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-newschedule',\r\n  templateUrl: './newschedule.component.html',\r\n  styleUrls: ['./newschedule.component.scss']\r\n})\r\nexport class NewscheduleComponent implements OnInit {\r\n  list: NgbDateStruct[] = [];\r\n  d = new Date();\r\n  date: NgbDateStruct = { year: this.d.getFullYear(), month: this.d.getMonth() + 1, day: this.d.getDate() };\r\n  time = { hour: 13, minute: 30};\r\n  schedule = {} as Schedule;\r\n\r\n  constructor(\r\n    private router: Router, private scheduleService: ScheduleService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  // setDate(date: NgbDateStruct){\r\n\r\n  //   this.list.push(date);\r\n  // }\r\n\r\n  commitmentRegister(schedule: Schedule){\r\n    schedule.day = this.date.day;\r\n    schedule.month = this.date.month;\r\n    schedule.year = this.date.year;\r\n    schedule.hour = this.time.hour;\r\n    schedule.minute = this.time.minute;\r\n        \r\n    this.scheduleService.createCommitment(\r\n      schedule.day, schedule.month, schedule.year,\r\n      schedule.hour, schedule.minute,\r\n      schedule.description, schedule.place).subscribe(\r\n        r => {\r\n          (`Compromisso cadastrado com sucesso`);\r\n          this.router.navigate(['/agenda']);\r\n        },\r\n        r => {\r\n          alert(r.error.error);\r\n        }\r\n      )\r\n  }\r\n}\r\n","<div class=\"container\">\n    <div class=\"new-schedule-container  row\">\n        <div class=\"content\">\n            <section class=\"col-lg-6\">\n                <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                <h1>\n                    Novo compromisso \n                    <i class=\"fas fa-paw\"></i>\n                </h1>\n                <div class=\"schedule-calendar\">\n                    <ngb-datepicker [(ngModel)]=\"date\"></ngb-datepicker>\n                    <!-- <input type=\"text\"  [(ngModel)]=\"date\"/> -->\n                    <!-- <button  ngbDatepicker (click)=\"setDate(date)\">Selecionar Data</button> -->\n                </div>\n                <a class=\"back-link\" routerLink=\"/profile\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    Voltar para home\n                </a>\n            </section> \n\n            <form class=\"col-lg-6\">\n                <input \n                    placeholder=\"Descrição\"\n                    [(ngModel)]=\"schedule.description\" [ngModelOptions]=\"{standalone: true}\"\n                    />\n                \n                    <ngb-timepicker [(ngModel)]=\"time\" [ngModelOptions]=\"{standalone: true}\"></ngb-timepicker>\n\n                <input placeholder=\"Local\"\n                       [(ngModel)]=\"schedule.place\" [ngModelOptions]=\"{standalone: true}\"\n                    />\n                <button class=\"button\" type=\"submit\" (click)=\"commitmentRegister(schedule)\">\n                    Cadastrar\n                </button>\n            </form>  \n        </div> \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { Pet } from 'src/app/Models/pet';\nimport { PetService } from 'src/app/Services/pet.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\nexport class ProfileComponent implements OnInit {\n  pets = {} as Pet;\n  pet;\n  gender;\n  castrated;\n  userName;\n  enableSave = false;\n  IsTextBoxDisabled = true;\n  title = 'ng-bootstrap-modal-demo';\n  closeResult: string;\n  modalOptions:NgbModalOptions;\n  reloadPag = true;\n\n\n  constructor(\n    private modalService: NgbModal,\n    private petService: PetService,\n    private router: Router,\n  ){\n    this.modalOptions = {\n      backdrop:'static',\n      backdropClass:'customBackdrop'\n    }\n  }\n\n  ngOnInit(): void { \n    setTimeout(() => {\n      this.petService.getPets().subscribe(\n        r => {\n          this.pets = r;\n          \n          for(let pet in this.pets){\n            if(this.pet.gender == 1)\n             this.gender = \"Fêmea\";\n            else{\n              this.gender = \"Fêmea\";\n            }\n\n            if(this.pet.castrated == 0)\n              this.pet.castrated = \"Não\";\n            else{\n              this.pet.castrated = \"Sim\";\n            }\n          }\n          \n        },\n        r => {\n          alert(r.error.error);\n        }\n      );   \n      this.userName = sessionStorage.getItem('userName');\n    }, 100);\n  }\n  \n  reload() {\n    if (this.reload) {\n      this.router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\n        this.router.navigate(['/profile']);\n        this.reloadPag = false;\n      });\n    }\n  }\n\n  logout(){\n    sessionStorage.clear();\n    this.router.navigate(['/']);\n\n  }\n  enableInput(){\n    this.IsTextBoxDisabled = false;\n    this.enableSave = true;\n  }\n\n  edit(){      \n    this.petService.editPet(this.pet.id, this.pet.name, this.pet.age, \n                            this.pet.gender, this.pet.weight, this.pet.castrated, \n                            this.pet.disease, this.pet.photo_link).subscribe(\n      r => {\n        // this.reload(); \n      },\n      r =>{\n        alert(r.error.error);\n      }\n    );\n\n  }\n\n  delete(){\n    this.petService.deletePet(this.pet.id).subscribe(\n      r =>{\n\n      },\n      r => {\n        alert(r.error.error);\n      }\n    );\n    this.reload();\n    this.router.navigate(['/']);\n  }\n\n  open(content, pet) {\n    this.pet = pet;\n    this.modalService.open(content, this.modalOptions).result.then((result) => {\n\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n\n  private getDismissReason(reason: any): string {\n    this.IsTextBoxDisabled = true;\n    this.enableSave = false;\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}","<div class=\"container\">\n    <div class=\"profile-container row\">\n            \n        <header class=\"col-12\">\n            <div class=\"profile-logo col-sm-12 col-md-6 col-lg-8\">\n                <img src=\"../../../assets/logo2.png\" alt=\"pets\" />\n                <span>Bem vindo, {{ userName }}!</span>\n                <button type=\"button\" clas=\"button-login-sm\" (click)=\"logout()\">\n                    <i class=\"fas fa-power-off\"></i>\n                </button>\n            </div>\n\n            <div class=\"option-group col-sm-12 col-md-6 col-lg-4\">\n                <a class=\"button col-6 col-md-6\" routerLink=\"/cadastrar-pet\">Cadastrar Pet</a>\n                <a class=\"button col-6 col-md-6\" routerLink=\"/agenda\">Agenda</a>\n                <button type=\"button\" class=\"button-login-lg\" (click)=\"logout()\">\n                    <i class=\"fas fa-power-off\"></i>\n                </button>\n            </div>\n            \n        </header>\n    \n        <h1 class=\"col-12\">Pets Cadastrados <i class=\"fas fa-paw\"></i></h1>\n\n        <ul class=\"col-12\" >\n            <li class=\"col-sm-12 col-md-6 col-lg-6\" (click)=\"open(mymodal, i)\" *ngFor=\"let pet of pets; let i as index;\">\n                <div class=\"petPic\">\n                    <img src=\"../../../assets/picpetDefault.png\" alt=\"pets\" />\n                </div> \n                <div class=\"petInfo\">\n                    <div>\n                        <strong>Nome: </strong>\n                        <p>{{ pet.name }}</p>                    \n                    </div>\n                    <div>\n                        <strong>Idade: </strong>\n                        <p>{{ pet.age }}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n\n<ng-template #mymodal let-modal >\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\"></h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body profile-modal\">\n      \n        <div class=\"petPic\">\n            <img src=\"../../../assets/picpetDefault.png\" alt=\"pets\" />\n        </div> \n        <div class=\"petInfo\">\n            <div>\n                <strong>Nome: </strong>\n                <input placeholder=\"{{ pet.name }}\" [(ngModel)]=\"pet.name\" disabled [attr.disabled]=\"IsTextBoxDisabled?'true':null\">                   \n            </div>\n            <div>\n                <strong>Idade: </strong>\n                <input placeholder=\" {{ pet.age }}\" [(ngModel)]=\"pet.age\" disabled [attr.disabled]=\"IsTextBoxDisabled?'true':null\">\n            </div>\n            <div>\n                <strong>Gênero: </strong>\n                <input placeholder=\"{{ pet.gender }}\" [(ngModel)]=\"pet.gender\" disabled [attr.disabled]=\"IsTextBoxDisabled?'true':null\">\n            </div>\n            <div>\n                <strong>Castrado: </strong>\n                <input placeholder=\"{{ pet.castrated }}\" [(ngModel)]=\"pet.castrated\" disabled [attr.disabled]=\"IsTextBoxDisabled?'true':null\">\n            </div>\n        </div>\n\n    </div>\n    <div class=\"modal-footer profile-modal\">\n        <button type=\"button\" class=\"btn btn-outline-dark trash-icon\" (click)=\"delete(); modal.close('Save click')\">\n            <i class=\"fas fa-trash-alt\"></i>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=' enableInput()'>\n            <i class=\"fas fa-edit\" ></i>\n        </button>\n        <button *ngIf=\"enableSave == false\" type=\"button\" class=\"close btn btn-outline-dark\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">Fechar</button>\n        <button *ngIf=\"enableSave == true\" type=\"button\" class=\"btn btn-outline-dark\" (click)=\"edit(); modal.dismiss('Cross click')\">Salvar</button>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from 'src/app/Services/register.service';\nimport { UserService } from 'src/app/Services/user.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/Models/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user = {} as User;\n\n  constructor(private registerService: RegisterService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n\n  register(user: User){\n    this.user.name = user.name;\n    this.user.email = user.email;\n    this.user.password = user.password;\n    this.user.city = user.city;\n    this.user.uf = user.uf;\n\n    this.registerService.register(this.user.name, this.user.email, this.user.password, this.user.city, this.user.uf)\n    .subscribe(\n      r => {\n        alert(`Bem-vindo, ${r.name}!`);\n        this.router.navigate(['/']);\n      },\n      r => {\n        alert(r.error.error);\n      }\n    )\n  }\n}","<div class=\"container\">\n    <div class=\"register-container row\">\n        <div class=\"content\">\n            <section>\n                <h1>\n                    Cadastro \n                </h1>\n                <p>Faça seu cadastro, entre na plataforma e organize as informações dos seus pets.</p>\n                <a class=\"back-link\" routerLink=\"/\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    Voltar para home\n                </a>\n            </section> \n            <form>  \n                <input placeholder=\"Nome\" [(ngModel)]=\"user.name\" [ngModelOptions]=\"{standalone: true}\" required/>\n\n                <input type=\"email\" placeholder=\"E-mail\" [(ngModel)]=\"user.email\" [ngModelOptions]=\"{standalone: true}\" required/>\n\n                <input type=\"password\" placeholder=\"Senha\" [(ngModel)]=\"user.password\" [ngModelOptions]=\"{standalone: true}\" required/>\n\n                <div class=\"input-group\">\n                    <input placeholder=\"Cidade\" class=\"col-sm-12 col-md-9 col-lg-10\" [(ngModel)]=\"user.city\" [ngModelOptions]=\"{standalone: true}\" required/>\n                    <input placeholder=\"UF\" class=\"col-sm-12 col-md-3 col-lg-2\" [(ngModel)]=\"user.uf\" [ngModelOptions]=\"{standalone: true}\" required/>\n                </div>\n\n                <button class=\"button\" type=\"submit\" (click)=\"register(user)\">\n                    Cadastrar\n                </button>\n            </form>  \n        </div> \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbDateStruct, NgbDatepicker, NgbDatepickerNavigateEvent, NgbDatepickerMonth, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Schedule } from 'src/app/Models/schedule';\r\nimport { ScheduleService } from 'src/app/Services/schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss']\r\n})\r\nexport class ScheduleComponent implements OnInit, NgbDatepickerNavigateEvent {\r\n  userName;\r\n  schedules = [] as any; \r\n  schedule;\r\n  currentMonth;\r\n  currentYear;\r\n  scheduleAux;\r\n  d = new Date();\r\n  list: NgbDateStruct[] = [];\r\n  date: NgbDateStruct = { year: this.d.getFullYear(), month: this.d.getMonth() + 1, day: this.d.getDate() };\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private scheduleService: ScheduleService,\r\n    private calendar: NgbCalendar\r\n      ) {\r\n\r\n  }\r\n  current: { year: number; month: number; };\r\n  next: { year: number; month: number; };\r\n  preventDefault: () => void;\r\n\r\n  ngOnInit(): void {\r\n      this.scheduleService.getCommitment().subscribe(\r\n        r => {\r\n          this.schedules = r;\r\n          this.scheduleAux = this.schedules.filter((schedule) => {\r\n            return schedule.month == this.d.getMonth() + 1; \r\n          })\r\n        },\r\n        r => {\r\n          alert(r.error.error);\r\n        });\r\n        this.userName = sessionStorage.getItem('userName');\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  setDate(date: NgbDateStruct){\r\n   this.date = date;\r\n  }\r\n\r\n  dateNavigate($event: NgbDatepickerNavigateEvent) {\r\n    this.currentMonth = $event.next.month;\r\n    this.currentYear = $event.next.year;\r\n\r\n    this.scheduleAux = this.schedules.filter((schedule) => {\r\n      return schedule.month == this.currentMonth && schedule.year == this.currentYear; \r\n    })\r\n    \r\n  }\r\n\r\n  setDay(day){\r\n    this.date.day = day;\r\n  }\r\n}","<div class=\"container\">\r\n    <div class=\"schedule-container row\">\r\n            \r\n        <header class=\"col-12\">\r\n            <div class=\"profile-logo col-sm-12 col-md-6 col-lg-6\">\r\n                <img src=\"../../../assets/logo2.png\" alt=\"pets\" />\r\n                <span>Bem vindo, {{ userName }}!</span>\r\n                <button type=\"button\" class=\"button-login-sm\" (click)=\"logout()\">\r\n                    <i class=\"fas fa-power-off\"></i>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"option-group col-sm-12 col-md-6 col-lg-6\">\r\n                <a class=\"button col-6 col-md-6\" routerLink=\"/profile\"><i class=\"fas fa-chevron-left\"></i> Voltar</a>\r\n                <a class=\"button col-6 col-md-6\" routerLink=\"/cadastrar-compromisso\">Novo</a>\r\n                <!-- <a class=\"button col-6 col-md-6 new-commit-lg\" routerLink=\"/cadastrar-compromisso\">Cadastrar compromisso</a> -->\r\n                <button type=\"button\" class=\"button-login-lg\" (click)=\"logout()\">\r\n                    <i class=\"fas fa-power-off\"></i>\r\n                </button>\r\n            </div>\r\n            \r\n        </header>\r\n        <div class=\"schedule-calendar col-md-5 col-lg-3\">\r\n            <ngb-datepicker  #dp [(ngModel)]=\"date\" (navigate)=\"dateNavigate($event)\" ></ngb-datepicker>\r\n            <!-- <button (click)=\"setDate(date)\">Filtrar por data</button> -->\r\n\r\n            <!-- <input type=\"text\"  [(ngModel)]=\"date\"/> -->\r\n            <!-- <button  ngbDatepicker (click)=\"setDate(date)\">Selecionar Data</button> -->\r\n        </div>\r\n        <div class=\"schedule-info col-md-7 col-lg-9\">\r\n            <ul  class=\"col-12\">\r\n                <li  class=\"col-sm-12 col-md-12 col-lg-12 col-xl-6\" *ngFor=\"let schedule of scheduleAux; let i as index;\" (click)=\"setDay(schedule.day)\">\r\n                    <div>\r\n                        <div class=\"schedule-field\">\r\n                            <strong><i class=\"far fa-calendar-alt\"></i>Data: </strong>\r\n                            {{ schedule.day }}/{{ schedule.month }}/{{ schedule.year }}\r\n                        </div>\r\n                        <div class=\"schedule-field\">\r\n                            <strong><i class=\"fas fa-map-marker-alt\"></i>Local: </strong>\r\n                            {{ schedule.place }}\r\n                        </div>\r\n                        <div class=\"schedule-field\">\r\n                            <strong><i class=\"far fa-clock\"></i>Horário: </strong>\r\n                            {{ schedule.hour}}:{{ schedule.minute }}\r\n                            <p></p>\r\n                        </div>\r\n                        <div class=\"schedule-field\">\r\n                            <strong><i class=\"far fa-clipboard\"></i>Descrição: </strong>\r\n                            {{ schedule.description }}\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}